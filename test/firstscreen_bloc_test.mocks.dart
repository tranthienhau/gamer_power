// Mocks generated by Mockito 5.0.15 from annotations
// in DemoApp/test/firstscreen_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:DemoApp/app/services/dialog_service.dart' as _i5;
import 'package:DemoApp/domain/domain.dart' as _i2;
import 'package:DemoApp/domain/entities/game.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [FetchGamesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchGamesUseCase extends _i1.Mock implements _i2.FetchGamesUseCase {
  MockFetchGamesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Game>> perform({Object? param}) =>
      (super.noSuchMethod(Invocation.method(#perform, [], {#param: param}),
              returnValue: Future<List<_i4.Game>>.value(<_i4.Game>[]))
          as _i3.Future<List<_i4.Game>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i5.DialogService {
  MockDialogService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> showLoading() =>
      (super.noSuchMethod(Invocation.method(#showLoading, []),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  void hideLoading() => super.noSuchMethod(Invocation.method(#hideLoading, []),
      returnValueForMissingStub: null);
  @override
  _i3.Future<dynamic> showAlert({String? message}) => (super.noSuchMethod(
      Invocation.method(#showAlert, [], {#message: message}),
      returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  String toString() => super.toString();
}
